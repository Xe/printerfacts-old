// Code generated by protoc-gen-twirp_analytics v0.0.1, DO NOT EDIT.
// source: printerfacts.proto

package printerfacts

import "context"
import "gopkg.in/segmentio/analytics-go.v3"

// PrinterfactsAnalytics is a middleware for Printerfacts that collects timing and error rate data for servers.
type PrinterfactsAnalytics struct {
	Next Printerfacts
	client analytics.Client
}

func NewPrinterfactsAnalytics(next Printerfacts, client analytics.Client) Printerfacts {
	var result PrinterfactsAnalytics
	result.Next = next
	result.client = client
	return result
}

func (i PrinterfactsAnalytics) Fact(ctx context.Context, input *FactParams) (result *Facts, err error) {
	var track analytics.Track
	track.Event = "PrinterfactsAnalytics Fact"
	defer func() {
		if err != nil {
			track.Event += " Error"
		}
		i.client.Enqueue(track)
	}()

	result, err = i.Next.Fact(ctx, input)
	return
}

